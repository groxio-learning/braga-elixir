# Braga-Elixir Basics

```elixir
Mix.install([
  {:kino, "~> 0.15.3"}
])

import IEx.Helpers
```

## SVG example

This is a CRC example.

* C
* R
* C

This is a mental mnemonic that stands for

* Construct
* Reduce
* Convert

```elixir
input = "42"

reducer = fn acc, number -> acc + number end

converter = fn acc -> "The ants ARRR is #{acc}" end

input  # "42"
|> String.to_integer() # 42
|> reducer.(1) # 43
|> reducer.(2) # 45
|> reducer.(3) # 48
|> converter.()

```

```elixir
defmodule Counter do
  def new(string) do
    String.to_integer(string)
  end

  def add(acc, int) do
    acc + int
  end

  def show(acc) do
    "The ants ARR is #{acc}"
  end
end
```

```elixir
"42"
|> Counter.new()
|> Counter.add(1)
|> Counter.add(2)
|> Counter.add(3)
|> Counter.show()
```

```elixir
list = [1, 2, 3]
input = "42"
accumulator = 0

list 
|> Enum.reduce(Counter.new(input), &Counter.add/2)
|> Counter.show()


```

```elixir
"""
<svg width="300" height="130" xmlns="http://www.w3.org/2000/svg">
  <rect width="200" height="100" x="10" y="10" rx="20" ry="20" fill="blue" />
</svg>
"""
|> Kino.Image.new(:svg)
```

```elixir
defmodule Canvas do
  def new(point) do
    """
    <svg width="800" height="800" xmlns="http://www.w3.org/2000/svg">
     #{Point.show(point)}
    </svg>
    """
  end

  def show(svg) do
    svg 
    |> Kino.Image.new(:svg)
  end
end
```

```elixir
Point.new(4, 2)
|> Canvas.new()
|> Canvas.show()
```

```elixir
# Don't execute this... bad idea

# 1..1_000_000_000_000 |> Enum.each(fn n -> "string#{n}" |> String.to_atom()  en)
# and you won't be home for Christmas
```

## Points

```elixir
defmodule Point do
  def new(x, y) do
    {x, y}
  end

  def right({x, y}) do
    {x + 1, y}
  end

  def left({x, y}) do
    {x - 1, y}
  end

  def up({x, y}) do
    {x, y-1}
  end

  def down({x, y}) do
    {x, y + 1}
  end

  def show({x, y}) do
    x = x * 20 
    y = y * 20
    """
    <rect 
      width="20" 
      height="20" 
      x="#{x}" y="#{y}" rx="4" ry="4" fill="red" />
    """
  end

end
```

```elixir
Point.new(0, 0)
|> i()

```

```elixir
h Enum.reduce/3

```
